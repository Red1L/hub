{"version":3,"sources":["modules/directives/comments/comments.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;IAuBH;QAGI,oBAAoB,GAAG,EAAU,SAAS;YAAtB,QAAG,GAAH,GAAG,CAAA;YAAU,cAAS,GAAT,SAAS,CAAA;YAG1C,UAAK,GAAG;gBACJ,SAAS,EAAE,GAAG;aACjB,CAAC;YACF,aAAQ,GAAG,eAAe,CAAC;YAC3B,SAAI,GAAuB,UAAC,KAAmB;gBAC3C,IAAI,SAAS,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;gBAC7B,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACpB,KAAK,CAAC,cAAc,GAAG,EAAE,CAAC;gBAE1B,IAAI,SAAS,GAAG;oBACZ,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;oBACjC,KAAK,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;oBAClC,KAAK,CAAC,cAAc,GAAG,EAAE,CAAC;gBAC9B,CAAC,CAAC;gBAEF,KAAK,CAAC,aAAa,GAAG,UAAC,IAAW;oBAC9B,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;wBAClB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,EAAC,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC,EAAE,EAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,OAAgB;4BAC3G,SAAS,EAAE,CAAC;4BACZ,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACjC,CAAC,EAAE,UAAC,MAAM;4BACN,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;wBAC5B,CAAC,CAAC,CAAC;oBACP,CAAC;gBACL,CAAC,CAAC;gBAEF,IAAI,QAAiB,CAAC;gBAEtB,KAAK,CAAC,eAAe,GAAG;oBACpB,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;wBAClB,IAAI,aAAa,GAAG,QAAQ,GAAG,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,EAAC,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC,EAAE,EAAC,CAAC,CAAC;wBAC/G,EAAE,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;4BACpB,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ;iCAChC,IAAI,CAAC,UAAC,OAAW;gCACd,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC;gCAClD,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oCACtC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;gCACzE,CAAC;4BACL,CAAC,CAAC;iCACD,KAAK,CAAC,UAAC,MAAU;gCACd,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;4BAC5B,CAAC,CAAC,CAAC;wBACX,CAAC;oBAEL,CAAC;gBACL,CAAC,CAAC;YACN,CAAC,CAAA;QAhDD,CAAC;;QAHM,kBAAO,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAoDlD,iBAAC;IAAD,CArDA,AAqDC,IAAA;IAED,OAAO;SACF,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC;SAC7B,SAAS,CAAC,YAAY,EAAE,gBAAgB,CAAC,aAAa,CAAa,UAAU,CAAC,CAAC,CAAC","file":"modules/directives/comments/comments.js","sourcesContent":["/*\r\n * Copyright (c) 2015-2016, The SeedStack authors <http://seedstack.org>\r\n *\r\n * This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\r\n */\r\n\r\nimport module = require('../module');\r\nimport angular = require('{angular}/angular');\r\nimport commentTemplate = require('[text]!{hub}/modules/directives/comments/comment.tmpl.html');\r\nimport Collator = Intl.Collator;\r\n\r\ninterface IComment {\r\n    author: string,\r\n    publicationDate: string,\r\n    text: string\r\n}\r\n\r\ninterface ICommentScope extends ng.IScope {\r\n    submitComment(comment:string): void;\r\n    newCommentText: string;\r\n    loadNewComments(criterias):void;\r\n    comments: IComment[];\r\n    component: any;\r\n    commentForm: ng.IFormController;\r\n    clearForm: Function\r\n}\r\n\r\nclass HubComment implements ng.IDirective {\r\n    static $inject = ['HomeService', '$resource'];\r\n\r\n    constructor(private api, private $resource) {\r\n    };\r\n\r\n    scope = {\r\n        component: '='\r\n    };\r\n    template = commentTemplate;\r\n    link:ng.IDirectiveLinkFn = (scope:ICommentScope) => {\r\n        var criterias = { size: 10 };\r\n        scope.comments = [];\r\n        scope.newCommentText = '';\r\n\r\n        var clearForm = () => {\r\n            scope.commentForm.$setPristine();\r\n            scope.commentForm.$setUntouched();\r\n            scope.newCommentText = '';\r\n        };\r\n\r\n        scope.submitComment = (text:string) => {\r\n            if (scope.component) {\r\n                scope.component.$links('comment', {componentId: scope.component.id}).save(text).$promise.then((comment:IComment) => {\r\n                    clearForm();\r\n                    scope.comments.push(comment);\r\n                }, (reject) => {\r\n                    throw new Error(reject);\r\n                });\r\n            }\r\n        };\r\n\r\n        var nextLink:Function;\r\n\r\n        scope.loadNewComments = () => {\r\n            if (scope.component) {\r\n                var fetchFunction = nextLink ? nextLink : scope.component.$links('comment', {componentId: scope.component.id});\r\n                if (fetchFunction.get) {\r\n                    fetchFunction.get(criterias).$promise\r\n                        .then((results:any) => {\r\n                            nextLink = results.$links('next') || angular.noop;\r\n                            if (results.$embedded('comment').length) {\r\n                                scope.comments = scope.comments.concat(results.$embedded('comment'));\r\n                            }\r\n                        })\r\n                        .catch((reject:any) => {\r\n                            throw new Error(reject);\r\n                        });\r\n                }\r\n\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nangular\r\n    .module(module.angularModules)\r\n    .directive('hubComment', DirectiveFactory.getFactoryFor<HubComment>(HubComment));\r\n"],"sourceRoot":"/source/"}