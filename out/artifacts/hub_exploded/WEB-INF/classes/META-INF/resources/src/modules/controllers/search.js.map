{"version":3,"sources":["modules/controllers/search.ts"],"names":[],"mappings":";;IAKA,IAAK,IAGJ;IAHD,WAAK,IAAI;QACL,oBAAa,MAAM,UAAA,CAAA;QACnB,0BAAmB,YAAY,gBAAA,CAAA;IACnC,CAAC,EAHI,IAAI,KAAJ,IAAI,QAGR;IAQD;QAOI,0BAAoB,GAAO,EAAU,SAA6B;YAA9C,QAAG,GAAH,GAAG,CAAI;YAAU,cAAS,GAAT,SAAS,CAAoB;YAK3D,oBAAe,GAAoB;gBACtC,MAAM,EAAE,EAAE;gBACV,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,EAAE;aACX,CAAC;YARE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC5C,CAAC;QAUM,uCAAY,GAAnB,UAAoB,eAAe;YAAnC,iBAQC;YAPG,eAAe,CAAC,MAAM,GAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC;YAC/D,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,UAAA,OAAO;gBAClC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;gBACrC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,WAAW,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3F,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC9E,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,mCAAQ,GAAhB,UAAiB,eAAgC,EAAE,SAAgC,EAAE,OAAgC;YAArH,iBAoBC;YAnBG,IAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAEzF,EAAE,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;gBACpB,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ;qBACtC,IAAI,CAAC,UAAC,OAAW;oBACd,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC;oBACvD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACZ,SAAS,CAAC,OAAO,CAAC,CAAC;oBACvB,CAAC;gBACL,CAAC,CAAC;qBACD,KAAK,CAAC,UAAA,QAAQ;oBACX,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACV,OAAO,EAAE,CAAC;oBACd,CAAC;oBACD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;YACX,CAAC;QACL,CAAC;QAEM,+BAAI,GAAX,UAAY,IAAS;YACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QACpD,CAAC;QAjDM,wBAAO,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAkDlD,uBAAC;IAAD,CAvDA,AAuDC,IAAA;IAED,OAAO;SACF,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC;SAC7B,UAAU,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC","file":"modules/controllers/search.js","sourcesContent":["import module = require('./module');\r\nimport angular = require(\"{angular}/angular\");\r\nimport IResource = angular.resource.IResource;\r\nimport IResourceClass = angular.resource.IResourceClass;\r\n\r\nenum Sort {\r\n    DATE = <any> 'date',\r\n    POPULARITY = <any> 'popularity',\r\n}\r\n\r\ninterface ISearchCriterias {\r\n    search: string,\r\n    sort: Sort,\r\n    size: number\r\n}\r\n\r\nclass SearchController {\r\n    public components:Card[];\r\n    public resultSize: number;\r\n    public noResults: boolean;\r\n\r\n    static $inject = ['HomeService', '$location'];\r\n\r\n    constructor(private api:any, private $location:ng.ILocationService) {\r\n        this.components = [];\r\n        this.loadNewCards(this.searchCriterias);\r\n    }\r\n\r\n    public searchCriterias:ISearchCriterias = {\r\n        search: '',\r\n        sort: Sort.DATE,\r\n        size: 12\r\n    };\r\n\r\n    private nextPage:Function;\r\n\r\n    public loadNewCards(searchCriterias) {\r\n        searchCriterias.search =  this.$location.search().search || '';\r\n        this.getCards(searchCriterias, results => {\r\n            this.resultSize = results.resultSize;\r\n            if (results.$embedded('components') && results.$embedded('components').constructor === Array) {\r\n                this.components = this.components.concat(results.$embedded('components'));\r\n            }\r\n        });\r\n    }\r\n\r\n    private getCards(searchCriterias:ISearchCriterias, successCb?:(results:any) => void, errorCb?:(rejected?:any) => void):void {\r\n        var fetchFunction = this.nextPage ? this.nextPage : this.api('home').enter('components');\r\n\r\n        if (fetchFunction.get) {\r\n            fetchFunction.get(searchCriterias).$promise\r\n                .then((results:any) => {\r\n                    this.noResults = false;\r\n                    this.nextPage = results.$links('next') || angular.noop;\r\n                    if (successCb) {\r\n                        successCb(results);\r\n                    }\r\n                })\r\n                .catch(rejected => {\r\n                    if (errorCb) {\r\n                        errorCb();\r\n                    }\r\n                    this.noResults = true;\r\n                    throw new Error(rejected);\r\n                });\r\n        }\r\n    }\r\n\r\n    public view(card:Card):void {\r\n        this.$location.path('hub/component/' + card.id);\r\n    }\r\n}\r\n\r\nangular\r\n    .module(module.angularModules)\r\n    .controller('SearchController', SearchController);"],"sourceRoot":"/source/"}